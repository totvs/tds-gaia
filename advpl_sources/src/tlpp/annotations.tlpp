#include "totvs.ch"
#include "tlpp-core.th"
#include "tlpp-rest.th"





@annotation parametros
nome as character
tipoParametro as character
tamanho as numeric
decimal as numeric
descricao as character
@end

@annotation classe
nome as character
descricao as character
@end

namespace TesteTlpp
@classe (nome= "Pessoa", descricao= "Classe de pessoa")
@parametros(nome = "cNome"      , tipoParametro="character" , tamanho=50, decimal=0, descricao="Nome da pessoa")
@parametros(nome = "cSobrenome" , tipoParametro="character" , tamanho=50, decimal=0, descricao="Sobrenome da pessoa")
@parametros(nome = "cCpf"       , tipoParametro="character" , tamanho=11, decimal=0, descricao="CPF da pessoa")

class Pessoa
	public method  new() constructor
	public method  getNome()
	public method  getSobrenome()
	public method  getCpf()

	private data cNome as character
	private data cSobrenome as character
	private data cCpf as character

endClass

/*/{Protheus.doc} Pessoa::new
M騁odo construtor
@type method
@version  1.0
@author every system
@since 20/05/2021
@param cNome, character, nome da pessoa
@param cSobrenome, character, sobrenome da pessoa
@param cCpf, character, cpf da pessoa
/*/
method new(cNome, cSobrenome, cCpf) class Pessoa
	self:cNome := cNome
	self:cSobrenome := cSobrenome
	self:cCpf := cCpf
return
method getNome() class Pessoa

return self:cNome
method getSobrenome() class Pessoa
return self:cSobrenome
method getCpf() class Pessoa
return self:cCpf

	using namespace EverySystem

user function testeReflection()
	local aClasse as array

	local aParams as array
	//覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧-
	//Verificando todas as classes do namespace "EverySystem" com a annotation "classe"
	//覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧覧蘭

	aClasse := Reflection.getClassesByAnnotation("classe", "EverySystem")
	//覧覧覧覧覧覧覧覧・
	//Verificando os par穃etros da classe
	//覧覧覧覧覧覧覧覧・

	aParams := Reflection.getClassAnnotationList(aClasse[1]:cClassName)
	//覧覧覧覧覧覧覧蘭
	//Atribuindo valores aos par穃etros
	//覧覧覧覧覧覧覧蘭
	&(aParams[2]["nome"]) := "Jo縊"
	&(aParams[3]["nome"]) := "Amaro"

	&(aParams[4]["nome"]) := "12345678911"
	//覧覧覧覧覧覧蘭
	//Instanciando a classe Pessoa
	//覧覧覧覧覧覧蘭

	oPessoa := aClasse[1]:CreateInstance(&(aParams[2]["nome"]), &(aParams[3]["nome"]), &(aParams[4]["nome"]))
	//覧覧覧覧覧覧覧覧覧
	//Testando os m騁odos da classe Pessoa
	//覧覧覧覧覧覧覧覧覧-
	conout(oPessoa:getNome())
	conout(oPessoa:getSobrenome())

	conout(oPessoa:getCpf())

return
